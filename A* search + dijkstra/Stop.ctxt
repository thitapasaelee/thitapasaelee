#BlueJ class context
comment0.target=Stop
comment0.text=\n\ Structure\ for\ holding\ stop\ information\n
comment1.params=lon\ lat\ name\ id
comment1.target=Stop(double,\ double,\ java.lang.String,\ java.lang.String)
comment1.text=\n\ Constructor\ for\ a\ stop\n\ \n\ @param\ id\ \ \ 4\ or\ 5\ digit\ stop\ id\n\ @param\ name\ Long\ name\ for\ the\ stop\n\ @param\ lat\n\ @param\ lon\n
comment10.params=line
comment10.target=void\ addLine(Line)
comment10.text=\n\ adding\ a\ line\ that\ goes\ through\ this\ stop\n\ @param\ line\n
comment11.params=
comment11.target=java.util.Collection\ getLines()
comment12.params=
comment12.target=java.util.Collection\ getForwardEdges()
comment12.text=Get\ the\ collection\ of\ forwardEdges
comment13.params=
comment13.target=java.util.Collection\ getBackwardEdges()
comment13.text=Get\ the\ collection\ of\ backwardEdges
comment14.params=
comment14.target=java.util.Collection\ getNeighbours()
comment14.text=Get\ the\ collection\ of\ neighbouring\ Stops
comment15.params=edge
comment15.target=void\ addForwardEdge(Edge)
comment15.text=add\ a\ new\ forward\ edge
comment16.params=e
comment16.target=void\ addBackwardEdge(Edge)
comment16.text=add\ a\ new\ backward\ edge
comment17.params=type
comment17.target=void\ deleteEdgesOfType(java.lang.String)
comment17.text=\n\ Delete\ forward\ and\ backward\ edges\ of\ the\ specified\ type.\n
comment18.params=stop
comment18.target=void\ addNeighbour(Stop)
comment18.text=\n\ Compute\ the\ neighbouring\ Stops\ -\ all\ the\ Stops\ at\ the\ other\ end\ of\n\ both\ the\ forward\ and\ backward\ edges.\n
comment19.params=id
comment19.target=void\ setSubGraphId(int)
comment19.text=\ \n\ @param\ subGraphId\ the\ id\ of\ the\ graph\ so\ stops\ in\ the\ game\ subgraph\ can\ be\ drawn\ in\ the\ same\ colour\ or\ highlighted\n
comment2.params=
comment2.target=GisPoint\ getPoint()
comment2.text=\n\ Get\ the\ location\ of\ the\ stop\n\ @return\ GisPoint\ object\ of\ location\ on\ earth\n
comment20.params=
comment20.target=int\ getSubGraphId()
comment3.params=
comment3.target=java.lang.String\ getName()
comment4.params=
comment4.target=java.lang.String\ getId()
comment5.params=loc
comment5.target=double\ distanceTo(GisPoint)
comment5.text=\n\ Returns\ distance\ in\ meters\ between\ this\ stop\ and\ a\ GisPoint\n
comment6.params=toStop
comment6.target=double\ distanceTo(Stop)
comment6.text=\n\ Returns\ distance\ in\ meters\ between\ this\ stop\ and\ another\ stop\n
comment7.params=other
comment7.target=int\ compareTo(Stop)
comment7.text=\n\ Compare\ by\ alphabetic\ order\ of\ name,\n\ If\ two\ stops\ have\ the\ same\ name,\ then\n\ compare\ their\ id's\ in\ case\ they\ are\ not\ the\ same\ stop.\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\ \n\ Display\ a\ stop\n\ \n\ @return\ string\ of\ the\ stop\ information\ in\ the\ format\:\ XXXX\:\ long\ name\ at\ (lon,lat)\n
comment9.params=point
comment9.target=boolean\ atLocation(GisPoint)
comment9.text=\n\ @param\ a\ GisPoint\ to\ check\ if\ the\ stop\ is\ in\ an\ **identical**\ location\n\ @return\ is\ this\ stop\ in\ the\ same\ location\ as\ the\ given\ point\n
numComments=21
